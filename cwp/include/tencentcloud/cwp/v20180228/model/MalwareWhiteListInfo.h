/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * Trojan allowlist information
                */
                class MalwareWhiteListInfo : public AbstractModel
                {
                public:
                    MalwareWhiteListInfo();
                    ~MalwareWhiteListInfo() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取Unique ID
                     * @return Id Unique ID
                     * 
                     */
                    uint64_t GetId() const;

                    /**
                     * 设置Unique ID
                     * @param _id Unique ID
                     * 
                     */
                    void SetId(const uint64_t& _id);

                    /**
                     * 判断参数 Id 是否已赋值
                     * @return Id 是否已赋值
                     * 
                     */
                    bool IdHasBeenSet() const;

                    /**
                     * 获取CVM QUUID (Separate multiple items with commas.)
                     * @return QuuidList CVM QUUID (Separate multiple items with commas.)
                     * 
                     */
                    std::string GetQuuidList() const;

                    /**
                     * 设置CVM QUUID (Separate multiple items with commas.)
                     * @param _quuidList CVM QUUID (Separate multiple items with commas.)
                     * 
                     */
                    void SetQuuidList(const std::string& _quuidList);

                    /**
                     * 判断参数 QuuidList 是否已赋值
                     * @return QuuidList 是否已赋值
                     * 
                     */
                    bool QuuidListHasBeenSet() const;

                    /**
                     * 获取md5 list (Separate multiple items with commas.)
                     * @return Md5List md5 list (Separate multiple items with commas.)
                     * 
                     */
                    std::string GetMd5List() const;

                    /**
                     * 设置md5 list (Separate multiple items with commas.)
                     * @param _md5List md5 list (Separate multiple items with commas.)
                     * 
                     */
                    void SetMd5List(const std::string& _md5List);

                    /**
                     * 判断参数 Md5List 是否已赋值
                     * @return Md5List 是否已赋值
                     * 
                     */
                    bool Md5ListHasBeenSet() const;

                    /**
                     * 获取Whether applies all hosts: 0 - no; 1 - yes
                     * @return IsGlobal Whether applies all hosts: 0 - no; 1 - yes
                     * 
                     */
                    uint64_t GetIsGlobal() const;

                    /**
                     * 设置Whether applies all hosts: 0 - no; 1 - yes
                     * @param _isGlobal Whether applies all hosts: 0 - no; 1 - yes
                     * 
                     */
                    void SetIsGlobal(const uint64_t& _isGlobal);

                    /**
                     * 判断参数 IsGlobal 是否已赋值
                     * @return IsGlobal 是否已赋值
                     * 
                     */
                    bool IsGlobalHasBeenSet() const;

                    /**
                     * 获取Allowlist mode: 0 - MD5; 1 - customization
                     * @return Mode Allowlist mode: 0 - MD5; 1 - customization
                     * 
                     */
                    uint64_t GetMode() const;

                    /**
                     * 设置Allowlist mode: 0 - MD5; 1 - customization
                     * @param _mode Allowlist mode: 0 - MD5; 1 - customization
                     * 
                     */
                    void SetMode(const uint64_t& _mode);

                    /**
                     * 判断参数 Mode 是否已赋值
                     * @return Mode 是否已赋值
                     * 
                     */
                    bool ModeHasBeenSet() const;

                    /**
                     * 获取Match mode: 0 - precise match; 1 - fuzzy match
                     * @return MatchType Match mode: 0 - precise match; 1 - fuzzy match
                     * 
                     */
                    uint64_t GetMatchType() const;

                    /**
                     * 设置Match mode: 0 - precise match; 1 - fuzzy match
                     * @param _matchType Match mode: 0 - precise match; 1 - fuzzy match
                     * 
                     */
                    void SetMatchType(const uint64_t& _matchType);

                    /**
                     * 判断参数 MatchType 是否已赋值
                     * @return MatchType 是否已赋值
                     * 
                     */
                    bool MatchTypeHasBeenSet() const;

                    /**
                     * 获取File name (Separate multiple items with commas.)
                     * @return FileName File name (Separate multiple items with commas.)
                     * 
                     */
                    std::string GetFileName() const;

                    /**
                     * 设置File name (Separate multiple items with commas.)
                     * @param _fileName File name (Separate multiple items with commas.)
                     * 
                     */
                    void SetFileName(const std::string& _fileName);

                    /**
                     * 判断参数 FileName 是否已赋值
                     * @return FileName 是否已赋值
                     * 
                     */
                    bool FileNameHasBeenSet() const;

                    /**
                     * 获取File directory (Separate multiple items with commas.)
                     * @return FileDirectory File directory (Separate multiple items with commas.)
                     * 
                     */
                    std::string GetFileDirectory() const;

                    /**
                     * 设置File directory (Separate multiple items with commas.)
                     * @param _fileDirectory File directory (Separate multiple items with commas.)
                     * 
                     */
                    void SetFileDirectory(const std::string& _fileDirectory);

                    /**
                     * 判断参数 FileDirectory 是否已赋值
                     * @return FileDirectory 是否已赋值
                     * 
                     */
                    bool FileDirectoryHasBeenSet() const;

                    /**
                     * 获取File suffix (Separate multiple items with commas.)
                     * @return FileExtension File suffix (Separate multiple items with commas.)
                     * 
                     */
                    std::string GetFileExtension() const;

                    /**
                     * 设置File suffix (Separate multiple items with commas.)
                     * @param _fileExtension File suffix (Separate multiple items with commas.)
                     * 
                     */
                    void SetFileExtension(const std::string& _fileExtension);

                    /**
                     * 判断参数 FileExtension 是否已赋值
                     * @return FileExtension 是否已赋值
                     * 
                     */
                    bool FileExtensionHasBeenSet() const;

                    /**
                     * 获取Rule creation time
                     * @return CreateTime Rule creation time
                     * 
                     */
                    std::string GetCreateTime() const;

                    /**
                     * 设置Rule creation time
                     * @param _createTime Rule creation time
                     * 
                     */
                    void SetCreateTime(const std::string& _createTime);

                    /**
                     * 判断参数 CreateTime 是否已赋值
                     * @return CreateTime 是否已赋值
                     * 
                     */
                    bool CreateTimeHasBeenSet() const;

                    /**
                     * 获取Affected records
                     * @return EventsCount Affected records
                     * 
                     */
                    uint64_t GetEventsCount() const;

                    /**
                     * 设置Affected records
                     * @param _eventsCount Affected records
                     * 
                     */
                    void SetEventsCount(const uint64_t& _eventsCount);

                    /**
                     * 判断参数 EventsCount 是否已赋值
                     * @return EventsCount 是否已赋值
                     * 
                     */
                    bool EventsCountHasBeenSet() const;

                private:

                    /**
                     * Unique ID
                     */
                    uint64_t m_id;
                    bool m_idHasBeenSet;

                    /**
                     * CVM QUUID (Separate multiple items with commas.)
                     */
                    std::string m_quuidList;
                    bool m_quuidListHasBeenSet;

                    /**
                     * md5 list (Separate multiple items with commas.)
                     */
                    std::string m_md5List;
                    bool m_md5ListHasBeenSet;

                    /**
                     * Whether applies all hosts: 0 - no; 1 - yes
                     */
                    uint64_t m_isGlobal;
                    bool m_isGlobalHasBeenSet;

                    /**
                     * Allowlist mode: 0 - MD5; 1 - customization
                     */
                    uint64_t m_mode;
                    bool m_modeHasBeenSet;

                    /**
                     * Match mode: 0 - precise match; 1 - fuzzy match
                     */
                    uint64_t m_matchType;
                    bool m_matchTypeHasBeenSet;

                    /**
                     * File name (Separate multiple items with commas.)
                     */
                    std::string m_fileName;
                    bool m_fileNameHasBeenSet;

                    /**
                     * File directory (Separate multiple items with commas.)
                     */
                    std::string m_fileDirectory;
                    bool m_fileDirectoryHasBeenSet;

                    /**
                     * File suffix (Separate multiple items with commas.)
                     */
                    std::string m_fileExtension;
                    bool m_fileExtensionHasBeenSet;

                    /**
                     * Rule creation time
                     */
                    std::string m_createTime;
                    bool m_createTimeHasBeenSet;

                    /**
                     * Affected records
                     */
                    uint64_t m_eventsCount;
                    bool m_eventsCountHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_
