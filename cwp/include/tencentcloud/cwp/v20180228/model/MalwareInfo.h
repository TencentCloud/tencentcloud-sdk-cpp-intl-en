/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>
#include <tencentcloud/cwp/v20180228/model/MachineExtraInfo.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * Malicious file details
                */
                class MalwareInfo : public AbstractModel
                {
                public:
                    MalwareInfo();
                    ~MalwareInfo() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取Virus name
                     * @return VirusName Virus name
                     * 
                     */
                    std::string GetVirusName() const;

                    /**
                     * 设置Virus name
                     * @param _virusName Virus name
                     * 
                     */
                    void SetVirusName(const std::string& _virusName);

                    /**
                     * 判断参数 VirusName 是否已赋值
                     * @return VirusName 是否已赋值
                     * 
                     */
                    bool VirusNameHasBeenSet() const;

                    /**
                     * 获取File size
                     * @return FileSize File size
                     * 
                     */
                    int64_t GetFileSize() const;

                    /**
                     * 设置File size
                     * @param _fileSize File size
                     * 
                     */
                    void SetFileSize(const int64_t& _fileSize);

                    /**
                     * 判断参数 FileSize 是否已赋值
                     * @return FileSize 是否已赋值
                     * 
                     */
                    bool FileSizeHasBeenSet() const;

                    /**
                     * 获取File MD5
                     * @return MD5 File MD5
                     * 
                     */
                    std::string GetMD5() const;

                    /**
                     * 设置File MD5
                     * @param _mD5 File MD5
                     * 
                     */
                    void SetMD5(const std::string& _mD5);

                    /**
                     * 判断参数 MD5 是否已赋值
                     * @return MD5 是否已赋值
                     * 
                     */
                    bool MD5HasBeenSet() const;

                    /**
                     * 获取File address
                     * @return FilePath File address
                     * 
                     */
                    std::string GetFilePath() const;

                    /**
                     * 设置File address
                     * @param _filePath File address
                     * 
                     */
                    void SetFilePath(const std::string& _filePath);

                    /**
                     * 判断参数 FilePath 是否已赋值
                     * @return FilePath 是否已赋值
                     * 
                     */
                    bool FilePathHasBeenSet() const;

                    /**
                     * 获取First running time
                     * @return FileCreateTime First running time
                     * 
                     */
                    std::string GetFileCreateTime() const;

                    /**
                     * 设置First running time
                     * @param _fileCreateTime First running time
                     * 
                     */
                    void SetFileCreateTime(const std::string& _fileCreateTime);

                    /**
                     * 判断参数 FileCreateTime 是否已赋值
                     * @return FileCreateTime 是否已赋值
                     * 
                     */
                    bool FileCreateTimeHasBeenSet() const;

                    /**
                     * 获取Last running time
                     * @return FileModifierTime Last running time
                     * 
                     */
                    std::string GetFileModifierTime() const;

                    /**
                     * 设置Last running time
                     * @param _fileModifierTime Last running time
                     * 
                     */
                    void SetFileModifierTime(const std::string& _fileModifierTime);

                    /**
                     * 判断参数 FileModifierTime 是否已赋值
                     * @return FileModifierTime 是否已赋值
                     * 
                     */
                    bool FileModifierTimeHasBeenSet() const;

                    /**
                     * 获取Severity description
                     * @return HarmDescribe Severity description
                     * 
                     */
                    std::string GetHarmDescribe() const;

                    /**
                     * 设置Severity description
                     * @param _harmDescribe Severity description
                     * 
                     */
                    void SetHarmDescribe(const std::string& _harmDescribe);

                    /**
                     * 判断参数 HarmDescribe 是否已赋值
                     * @return HarmDescribe 是否已赋值
                     * 
                     */
                    bool HarmDescribeHasBeenSet() const;

                    /**
                     * 获取Recommended solution
                     * @return SuggestScheme Recommended solution
                     * 
                     */
                    std::string GetSuggestScheme() const;

                    /**
                     * 设置Recommended solution
                     * @param _suggestScheme Recommended solution
                     * 
                     */
                    void SetSuggestScheme(const std::string& _suggestScheme);

                    /**
                     * 判断参数 SuggestScheme 是否已赋值
                     * @return SuggestScheme 是否已赋值
                     * 
                     */
                    bool SuggestSchemeHasBeenSet() const;

                    /**
                     * 获取Server name
                     * @return ServersName Server name
                     * 
                     */
                    std::string GetServersName() const;

                    /**
                     * 设置Server name
                     * @param _serversName Server name
                     * 
                     */
                    void SetServersName(const std::string& _serversName);

                    /**
                     * 判断参数 ServersName 是否已赋值
                     * @return ServersName 是否已赋值
                     * 
                     */
                    bool ServersNameHasBeenSet() const;

                    /**
                     * 获取Server IP
                     * @return HostIp Server IP
                     * 
                     */
                    std::string GetHostIp() const;

                    /**
                     * 设置Server IP
                     * @param _hostIp Server IP
                     * 
                     */
                    void SetHostIp(const std::string& _hostIp);

                    /**
                     * 判断参数 HostIp 是否已赋值
                     * @return HostIp 是否已赋值
                     * 
                     */
                    bool HostIpHasBeenSet() const;

                    /**
                     * 获取Process name
                     * @return ProcessName Process name
                     * 
                     */
                    std::string GetProcessName() const;

                    /**
                     * 设置Process name
                     * @param _processName Process name
                     * 
                     */
                    void SetProcessName(const std::string& _processName);

                    /**
                     * 判断参数 ProcessName 是否已赋值
                     * @return ProcessName 是否已赋值
                     * 
                     */
                    bool ProcessNameHasBeenSet() const;

                    /**
                     * 获取Process ID
                     * @return ProcessID Process ID
                     * 
                     */
                    std::string GetProcessID() const;

                    /**
                     * 设置Process ID
                     * @param _processID Process ID
                     * 
                     */
                    void SetProcessID(const std::string& _processID);

                    /**
                     * 判断参数 ProcessID 是否已赋值
                     * @return ProcessID 是否已赋值
                     * 
                     */
                    bool ProcessIDHasBeenSet() const;

                    /**
                     * 获取Tag Features
                     * @return Tags Tag Features
                     * 
                     */
                    std::vector<std::string> GetTags() const;

                    /**
                     * 设置Tag Features
                     * @param _tags Tag Features
                     * 
                     */
                    void SetTags(const std::vector<std::string>& _tags);

                    /**
                     * 判断参数 Tags 是否已赋值
                     * @return Tags 是否已赋值
                     * 
                     */
                    bool TagsHasBeenSet() const;

                    /**
                     * 获取Impact breadth // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return Breadth Impact breadth // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetBreadth() const;

                    /**
                     * 设置Impact breadth // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _breadth Impact breadth // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetBreadth(const std::string& _breadth);

                    /**
                     * 判断参数 Breadth 是否已赋值
                     * @return Breadth 是否已赋值
                     * 
                     */
                    bool BreadthHasBeenSet() const;

                    /**
                     * 获取Search popularity // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return Heat Search popularity // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetHeat() const;

                    /**
                     * 设置Search popularity // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _heat Search popularity // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetHeat(const std::string& _heat);

                    /**
                     * 判断参数 Heat 是否已赋值
                     * @return Heat 是否已赋值
                     * 
                     */
                    bool HeatHasBeenSet() const;

                    /**
                     * 获取Unique ID
                     * @return Id Unique ID
                     * 
                     */
                    uint64_t GetId() const;

                    /**
                     * 设置Unique ID
                     * @param _id Unique ID
                     * 
                     */
                    void SetId(const uint64_t& _id);

                    /**
                     * 判断参数 Id 是否已赋值
                     * @return Id 是否已赋值
                     * 
                     */
                    bool IdHasBeenSet() const;

                    /**
                     * 获取File name
                     * @return FileName File name
                     * 
                     */
                    std::string GetFileName() const;

                    /**
                     * 设置File name
                     * @param _fileName File name
                     * 
                     */
                    void SetFileName(const std::string& _fileName);

                    /**
                     * 判断参数 FileName 是否已赋值
                     * @return FileName 是否已赋值
                     * 
                     */
                    bool FileNameHasBeenSet() const;

                    /**
                     * 获取First detection time
                     * @return CreateTime First detection time
                     * 
                     */
                    std::string GetCreateTime() const;

                    /**
                     * 设置First detection time
                     * @param _createTime First detection time
                     * 
                     */
                    void SetCreateTime(const std::string& _createTime);

                    /**
                     * 判断参数 CreateTime 是否已赋值
                     * @return CreateTime 是否已赋值
                     * 
                     */
                    bool CreateTimeHasBeenSet() const;

                    /**
                     * 获取Last scan time
                     * @return LatestScanTime Last scan time
                     * 
                     */
                    std::string GetLatestScanTime() const;

                    /**
                     * 设置Last scan time
                     * @param _latestScanTime Last scan time
                     * 
                     */
                    void SetLatestScanTime(const std::string& _latestScanTime);

                    /**
                     * 判断参数 LatestScanTime 是否已赋值
                     * @return LatestScanTime 是否已赋值
                     * 
                     */
                    bool LatestScanTimeHasBeenSet() const;

                    /**
                     * 获取Reference link
                     * @return Reference Reference link
                     * 
                     */
                    std::string GetReference() const;

                    /**
                     * 设置Reference link
                     * @param _reference Reference link
                     * 
                     */
                    void SetReference(const std::string& _reference);

                    /**
                     * 判断参数 Reference 是否已赋值
                     * @return Reference 是否已赋值
                     * 
                     */
                    bool ReferenceHasBeenSet() const;

                    /**
                     * 获取Public IP address
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return MachineWanIp Public IP address
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetMachineWanIp() const;

                    /**
                     * 设置Public IP address
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _machineWanIp Public IP address
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetMachineWanIp(const std::string& _machineWanIp);

                    /**
                     * 判断参数 MachineWanIp 是否已赋值
                     * @return MachineWanIp 是否已赋值
                     * 
                     */
                    bool MachineWanIpHasBeenSet() const;

                    /**
                     * 获取Process tree in JSON format. pid: process ID; exe: file path; account: groups and users to which the process belongs; cmdline: executed commands; ssh_service: SSH service IP; ssh_source: log-in source
.Note: This field may return null, indicating that no valid values can be obtained.
                     * @return PsTree Process tree in JSON format. pid: process ID; exe: file path; account: groups and users to which the process belongs; cmdline: executed commands; ssh_service: SSH service IP; ssh_source: log-in source
.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetPsTree() const;

                    /**
                     * 设置Process tree in JSON format. pid: process ID; exe: file path; account: groups and users to which the process belongs; cmdline: executed commands; ssh_service: SSH service IP; ssh_source: log-in source
.Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _psTree Process tree in JSON format. pid: process ID; exe: file path; account: groups and users to which the process belongs; cmdline: executed commands; ssh_service: SSH service IP; ssh_source: log-in source
.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetPsTree(const std::string& _psTree);

                    /**
                     * 判断参数 PsTree 是否已赋值
                     * @return PsTree 是否已赋值
                     * 
                     */
                    bool PsTreeHasBeenSet() const;

                    /**
                     * 获取Online status of a host: OFFLINE and ONLINE
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return MachineStatus Online status of a host: OFFLINE and ONLINE
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetMachineStatus() const;

                    /**
                     * 设置Online status of a host: OFFLINE and ONLINE
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _machineStatus Online status of a host: OFFLINE and ONLINE
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetMachineStatus(const std::string& _machineStatus);

                    /**
                     * 判断参数 MachineStatus 是否已赋值
                     * @return MachineStatus 是否已赋值
                     * 
                     */
                    bool MachineStatusHasBeenSet() const;

                    /**
                     * 获取Status. 4: pending; 5: trusted; 6: isolated.
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return Status Status. 4: pending; 5: trusted; 6: isolated.
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    uint64_t GetStatus() const;

                    /**
                     * 设置Status. 4: pending; 5: trusted; 6: isolated.
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _status Status. 4: pending; 5: trusted; 6: isolated.
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetStatus(const uint64_t& _status);

                    /**
                     * 判断参数 Status 是否已赋值
                     * @return Status 是否已赋值
                     * 
                     */
                    bool StatusHasBeenSet() const;

                    /**
                     * 获取Risk level. 0: prompt; 1: low; 2: medium; 3: high; 4: critical.Note: This field may return null, indicating that no valid values can be obtained.
                     * @return Level Risk level. 0: prompt; 1: low; 2: medium; 3: high; 4: critical.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    uint64_t GetLevel() const;

                    /**
                     * 设置Risk level. 0: prompt; 1: low; 2: medium; 3: high; 4: critical.Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _level Risk level. 0: prompt; 1: low; 2: medium; 3: high; 4: critical.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetLevel(const uint64_t& _level);

                    /**
                     * 判断参数 Level 是否已赋值
                     * @return Level 是否已赋值
                     * 
                     */
                    bool LevelHasBeenSet() const;

                    /**
                     * 获取Trojan detection platforms, separated with commas. 1: cloud security engine; 2: TAV; 3: BinaryAI; 4: abnormal behavior; 5: threat intelligence.Note: This field may return null, indicating that no valid values can be obtained.
                     * @return CheckPlatform Trojan detection platforms, separated with commas. 1: cloud security engine; 2: TAV; 3: BinaryAI; 4: abnormal behavior; 5: threat intelligence.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetCheckPlatform() const;

                    /**
                     * 设置Trojan detection platforms, separated with commas. 1: cloud security engine; 2: TAV; 3: BinaryAI; 4: abnormal behavior; 5: threat intelligence.Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _checkPlatform Trojan detection platforms, separated with commas. 1: cloud security engine; 2: TAV; 3: BinaryAI; 4: abnormal behavior; 5: threat intelligence.Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetCheckPlatform(const std::string& _checkPlatform);

                    /**
                     * 判断参数 CheckPlatform 是否已赋值
                     * @return CheckPlatform 是否已赋值
                     * 
                     */
                    bool CheckPlatformHasBeenSet() const;

                    /**
                     * 获取Host UUID
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return Uuid Host UUID
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetUuid() const;

                    /**
                     * 设置Host UUID
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _uuid Host UUID
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetUuid(const std::string& _uuid);

                    /**
                     * 判断参数 Uuid 是否已赋值
                     * @return Uuid 是否已赋值
                     * 
                     */
                    bool UuidHasBeenSet() const;

                    /**
                     * 获取Last modification time
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return ModifyTime Last modification time
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetModifyTime() const;

                    /**
                     * 设置Last modification time
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _modifyTime Last modification time
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetModifyTime(const std::string& _modifyTime);

                    /**
                     * 判断参数 ModifyTime 是否已赋值
                     * @return ModifyTime 是否已赋值
                     * 
                     */
                    bool ModifyTimeHasBeenSet() const;

                    /**
                     * 获取Last access time
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return StrFileAccessTime Last access time
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    std::string GetStrFileAccessTime() const;

                    /**
                     * 设置Last access time
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _strFileAccessTime Last access time
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetStrFileAccessTime(const std::string& _strFileAccessTime);

                    /**
                     * 判断参数 StrFileAccessTime 是否已赋值
                     * @return StrFileAccessTime 是否已赋值
                     * 
                     */
                    bool StrFileAccessTimeHasBeenSet() const;

                    /**
                     * 获取Additional information
Note: This field may return null, indicating that no valid values can be obtained.
                     * @return MachineExtraInfo Additional information
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    MachineExtraInfo GetMachineExtraInfo() const;

                    /**
                     * 设置Additional information
Note: This field may return null, indicating that no valid values can be obtained.
                     * @param _machineExtraInfo Additional information
Note: This field may return null, indicating that no valid values can be obtained.
                     * 
                     */
                    void SetMachineExtraInfo(const MachineExtraInfo& _machineExtraInfo);

                    /**
                     * 判断参数 MachineExtraInfo 是否已赋值
                     * @return MachineExtraInfo 是否已赋值
                     * 
                     */
                    bool MachineExtraInfoHasBeenSet() const;

                private:

                    /**
                     * Virus name
                     */
                    std::string m_virusName;
                    bool m_virusNameHasBeenSet;

                    /**
                     * File size
                     */
                    int64_t m_fileSize;
                    bool m_fileSizeHasBeenSet;

                    /**
                     * File MD5
                     */
                    std::string m_mD5;
                    bool m_mD5HasBeenSet;

                    /**
                     * File address
                     */
                    std::string m_filePath;
                    bool m_filePathHasBeenSet;

                    /**
                     * First running time
                     */
                    std::string m_fileCreateTime;
                    bool m_fileCreateTimeHasBeenSet;

                    /**
                     * Last running time
                     */
                    std::string m_fileModifierTime;
                    bool m_fileModifierTimeHasBeenSet;

                    /**
                     * Severity description
                     */
                    std::string m_harmDescribe;
                    bool m_harmDescribeHasBeenSet;

                    /**
                     * Recommended solution
                     */
                    std::string m_suggestScheme;
                    bool m_suggestSchemeHasBeenSet;

                    /**
                     * Server name
                     */
                    std::string m_serversName;
                    bool m_serversNameHasBeenSet;

                    /**
                     * Server IP
                     */
                    std::string m_hostIp;
                    bool m_hostIpHasBeenSet;

                    /**
                     * Process name
                     */
                    std::string m_processName;
                    bool m_processNameHasBeenSet;

                    /**
                     * Process ID
                     */
                    std::string m_processID;
                    bool m_processIDHasBeenSet;

                    /**
                     * Tag Features
                     */
                    std::vector<std::string> m_tags;
                    bool m_tagsHasBeenSet;

                    /**
                     * Impact breadth // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_breadth;
                    bool m_breadthHasBeenSet;

                    /**
                     * Search popularity // Not provided currently
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_heat;
                    bool m_heatHasBeenSet;

                    /**
                     * Unique ID
                     */
                    uint64_t m_id;
                    bool m_idHasBeenSet;

                    /**
                     * File name
                     */
                    std::string m_fileName;
                    bool m_fileNameHasBeenSet;

                    /**
                     * First detection time
                     */
                    std::string m_createTime;
                    bool m_createTimeHasBeenSet;

                    /**
                     * Last scan time
                     */
                    std::string m_latestScanTime;
                    bool m_latestScanTimeHasBeenSet;

                    /**
                     * Reference link
                     */
                    std::string m_reference;
                    bool m_referenceHasBeenSet;

                    /**
                     * Public IP address
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_machineWanIp;
                    bool m_machineWanIpHasBeenSet;

                    /**
                     * Process tree in JSON format. pid: process ID; exe: file path; account: groups and users to which the process belongs; cmdline: executed commands; ssh_service: SSH service IP; ssh_source: log-in source
.Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_psTree;
                    bool m_psTreeHasBeenSet;

                    /**
                     * Online status of a host: OFFLINE and ONLINE
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_machineStatus;
                    bool m_machineStatusHasBeenSet;

                    /**
                     * Status. 4: pending; 5: trusted; 6: isolated.
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    uint64_t m_status;
                    bool m_statusHasBeenSet;

                    /**
                     * Risk level. 0: prompt; 1: low; 2: medium; 3: high; 4: critical.Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    uint64_t m_level;
                    bool m_levelHasBeenSet;

                    /**
                     * Trojan detection platforms, separated with commas. 1: cloud security engine; 2: TAV; 3: BinaryAI; 4: abnormal behavior; 5: threat intelligence.Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_checkPlatform;
                    bool m_checkPlatformHasBeenSet;

                    /**
                     * Host UUID
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_uuid;
                    bool m_uuidHasBeenSet;

                    /**
                     * Last modification time
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_modifyTime;
                    bool m_modifyTimeHasBeenSet;

                    /**
                     * Last access time
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    std::string m_strFileAccessTime;
                    bool m_strFileAccessTimeHasBeenSet;

                    /**
                     * Additional information
Note: This field may return null, indicating that no valid values can be obtained.
                     */
                    MachineExtraInfo m_machineExtraInfo;
                    bool m_machineExtraInfoHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_
