/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CFW_V20190904_MODEL_ADDENTERPRISESECURITYGROUPRULESREQUEST_H_
#define TENCENTCLOUD_CFW_V20190904_MODEL_ADDENTERPRISESECURITYGROUPRULESREQUEST_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/AbstractModel.h>
#include <tencentcloud/cfw/v20190904/model/SecurityGroupRule.h>


namespace TencentCloud
{
    namespace Cfw
    {
        namespace V20190904
        {
            namespace Model
            {
                /**
                * AddEnterpriseSecurityGroupRules request structure.
                */
                class AddEnterpriseSecurityGroupRulesRequest : public AbstractModel
                {
                public:
                    AddEnterpriseSecurityGroupRulesRequest();
                    ~AddEnterpriseSecurityGroupRulesRequest() = default;
                    std::string ToJsonString() const;


                    /**
                     * 获取Creates rule data
                     * @return Data Creates rule data
                     * 
                     */
                    std::vector<SecurityGroupRule> GetData() const;

                    /**
                     * 设置Creates rule data
                     * @param _data Creates rule data
                     * 
                     */
                    void SetData(const std::vector<SecurityGroupRule>& _data);

                    /**
                     * 判断参数 Data 是否已赋值
                     * @return Data 是否已赋值
                     * 
                     */
                    bool DataHasBeenSet() const;

                    /**
                     * 获取Adding type. 0: add to the end; 1: add to the front; 2: insert. Default: 0
                     * @return Type Adding type. 0: add to the end; 1: add to the front; 2: insert. Default: 0
                     * 
                     */
                    uint64_t GetType() const;

                    /**
                     * 设置Adding type. 0: add to the end; 1: add to the front; 2: insert. Default: 0
                     * @param _type Adding type. 0: add to the end; 1: add to the front; 2: insert. Default: 0
                     * 
                     */
                    void SetType(const uint64_t& _type);

                    /**
                     * 判断参数 Type 是否已赋值
                     * @return Type 是否已赋值
                     * 
                     */
                    bool TypeHasBeenSet() const;

                    /**
                     * 获取An identifier to ensure the idempotency of the request. The value of the ClientToken parameter is a unique string that is generated by your client and can contain up to 64 ASCII characters in length.
                     * @return ClientToken An identifier to ensure the idempotency of the request. The value of the ClientToken parameter is a unique string that is generated by your client and can contain up to 64 ASCII characters in length.
                     * 
                     */
                    std::string GetClientToken() const;

                    /**
                     * 设置An identifier to ensure the idempotency of the request. The value of the ClientToken parameter is a unique string that is generated by your client and can contain up to 64 ASCII characters in length.
                     * @param _clientToken An identifier to ensure the idempotency of the request. The value of the ClientToken parameter is a unique string that is generated by your client and can contain up to 64 ASCII characters in length.
                     * 
                     */
                    void SetClientToken(const std::string& _clientToken);

                    /**
                     * 判断参数 ClientToken 是否已赋值
                     * @return ClientToken 是否已赋值
                     * 
                     */
                    bool ClientTokenHasBeenSet() const;

                    /**
                     * 获取Indicates whether to delay publishing. 1: delay; other values: do not delay
                     * @return IsDelay Indicates whether to delay publishing. 1: delay; other values: do not delay
                     * 
                     */
                    uint64_t GetIsDelay() const;

                    /**
                     * 设置Indicates whether to delay publishing. 1: delay; other values: do not delay
                     * @param _isDelay Indicates whether to delay publishing. 1: delay; other values: do not delay
                     * 
                     */
                    void SetIsDelay(const uint64_t& _isDelay);

                    /**
                     * 判断参数 IsDelay 是否已赋值
                     * @return IsDelay 是否已赋值
                     * 
                     */
                    bool IsDelayHasBeenSet() const;

                private:

                    /**
                     * Creates rule data
                     */
                    std::vector<SecurityGroupRule> m_data;
                    bool m_dataHasBeenSet;

                    /**
                     * Adding type. 0: add to the end; 1: add to the front; 2: insert. Default: 0
                     */
                    uint64_t m_type;
                    bool m_typeHasBeenSet;

                    /**
                     * An identifier to ensure the idempotency of the request. The value of the ClientToken parameter is a unique string that is generated by your client and can contain up to 64 ASCII characters in length.
                     */
                    std::string m_clientToken;
                    bool m_clientTokenHasBeenSet;

                    /**
                     * Indicates whether to delay publishing. 1: delay; other values: do not delay
                     */
                    uint64_t m_isDelay;
                    bool m_isDelayHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CFW_V20190904_MODEL_ADDENTERPRISESECURITYGROUPRULESREQUEST_H_
