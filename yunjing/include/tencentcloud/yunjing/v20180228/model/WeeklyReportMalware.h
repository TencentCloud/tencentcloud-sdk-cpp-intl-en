/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_YUNJING_V20180228_MODEL_WEEKLYREPORTMALWARE_H_
#define TENCENTCLOUD_YUNJING_V20180228_MODEL_WEEKLYREPORTMALWARE_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>


namespace TencentCloud
{
    namespace Yunjing
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * Trojan data in weekly CWP Pro report.
                */
                class WeeklyReportMalware : public AbstractModel
                {
                public:
                    WeeklyReportMalware();
                    ~WeeklyReportMalware() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取Server IP.
                     * @return MachineIp Server IP.
                     * 
                     */
                    std::string GetMachineIp() const;

                    /**
                     * 设置Server IP.
                     * @param _machineIp Server IP.
                     * 
                     */
                    void SetMachineIp(const std::string& _machineIp);

                    /**
                     * 判断参数 MachineIp 是否已赋值
                     * @return MachineIp 是否已赋值
                     * 
                     */
                    bool MachineIpHasBeenSet() const;

                    /**
                     * 获取Trojan file path.
                     * @return FilePath Trojan file path.
                     * 
                     */
                    std::string GetFilePath() const;

                    /**
                     * 设置Trojan file path.
                     * @param _filePath Trojan file path.
                     * 
                     */
                    void SetFilePath(const std::string& _filePath);

                    /**
                     * 判断参数 FilePath 是否已赋值
                     * @return FilePath 是否已赋值
                     * 
                     */
                    bool FilePathHasBeenSet() const;

                    /**
                     * 获取Trojan file MD5 value.
                     * @return Md5 Trojan file MD5 value.
                     * 
                     */
                    std::string GetMd5() const;

                    /**
                     * 设置Trojan file MD5 value.
                     * @param _md5 Trojan file MD5 value.
                     * 
                     */
                    void SetMd5(const std::string& _md5);

                    /**
                     * 判断参数 Md5 是否已赋值
                     * @return Md5 是否已赋值
                     * 
                     */
                    bool Md5HasBeenSet() const;

                    /**
                     * 获取Trojan discovery time.
                     * @return FindTime Trojan discovery time.
                     * 
                     */
                    std::string GetFindTime() const;

                    /**
                     * 设置Trojan discovery time.
                     * @param _findTime Trojan discovery time.
                     * 
                     */
                    void SetFindTime(const std::string& _findTime);

                    /**
                     * 判断参数 FindTime 是否已赋值
                     * @return FindTime 是否已赋值
                     * 
                     */
                    bool FindTimeHasBeenSet() const;

                    /**
                     * 获取Current trojan status.
<li>UN_OPERATED: not processed</li>
<li>SEGREGATED: isolated</li>
<li>TRUSTED: trusted</li>
<li>SEPARATING: isolating</li>
<li>RECOVERING: recovering</li>
                     * @return Status Current trojan status.
<li>UN_OPERATED: not processed</li>
<li>SEGREGATED: isolated</li>
<li>TRUSTED: trusted</li>
<li>SEPARATING: isolating</li>
<li>RECOVERING: recovering</li>
                     * 
                     */
                    std::string GetStatus() const;

                    /**
                     * 设置Current trojan status.
<li>UN_OPERATED: not processed</li>
<li>SEGREGATED: isolated</li>
<li>TRUSTED: trusted</li>
<li>SEPARATING: isolating</li>
<li>RECOVERING: recovering</li>
                     * @param _status Current trojan status.
<li>UN_OPERATED: not processed</li>
<li>SEGREGATED: isolated</li>
<li>TRUSTED: trusted</li>
<li>SEPARATING: isolating</li>
<li>RECOVERING: recovering</li>
                     * 
                     */
                    void SetStatus(const std::string& _status);

                    /**
                     * 判断参数 Status 是否已赋值
                     * @return Status 是否已赋值
                     * 
                     */
                    bool StatusHasBeenSet() const;

                private:

                    /**
                     * Server IP.
                     */
                    std::string m_machineIp;
                    bool m_machineIpHasBeenSet;

                    /**
                     * Trojan file path.
                     */
                    std::string m_filePath;
                    bool m_filePathHasBeenSet;

                    /**
                     * Trojan file MD5 value.
                     */
                    std::string m_md5;
                    bool m_md5HasBeenSet;

                    /**
                     * Trojan discovery time.
                     */
                    std::string m_findTime;
                    bool m_findTimeHasBeenSet;

                    /**
                     * Current trojan status.
<li>UN_OPERATED: not processed</li>
<li>SEGREGATED: isolated</li>
<li>TRUSTED: trusted</li>
<li>SEPARATING: isolating</li>
<li>RECOVERING: recovering</li>
                     */
                    std::string m_status;
                    bool m_statusHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_YUNJING_V20180228_MODEL_WEEKLYREPORTMALWARE_H_
