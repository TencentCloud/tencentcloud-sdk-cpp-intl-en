/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_BATCH_V20170312_MODEL_CREATECOMPUTEENVREQUEST_H_
#define TENCENTCLOUD_BATCH_V20170312_MODEL_CREATECOMPUTEENVREQUEST_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/AbstractModel.h>
#include <tencentcloud/batch/v20170312/model/NamedComputeEnv.h>
#include <tencentcloud/batch/v20170312/model/Placement.h>


namespace TencentCloud
{
    namespace Batch
    {
        namespace V20170312
        {
            namespace Model
            {
                /**
                * CreateComputeEnv request structure.
                */
                class CreateComputeEnvRequest : public AbstractModel
                {
                public:
                    CreateComputeEnvRequest();
                    ~CreateComputeEnvRequest() = default;
                    std::string ToJsonString() const;


                    /**
                     * 获取Compute environment information
                     * @return ComputeEnv Compute environment information
                     * 
                     */
                    NamedComputeEnv GetComputeEnv() const;

                    /**
                     * 设置Compute environment information
                     * @param _computeEnv Compute environment information
                     * 
                     */
                    void SetComputeEnv(const NamedComputeEnv& _computeEnv);

                    /**
                     * 判断参数 ComputeEnv 是否已赋值
                     * @return ComputeEnv 是否已赋值
                     * 
                     */
                    bool ComputeEnvHasBeenSet() const;

                    /**
                     * 获取Location information
                     * @return Placement Location information
                     * 
                     */
                    Placement GetPlacement() const;

                    /**
                     * 设置Location information
                     * @param _placement Location information
                     * 
                     */
                    void SetPlacement(const Placement& _placement);

                    /**
                     * 判断参数 Placement 是否已赋值
                     * @return Placement 是否已赋值
                     * 
                     */
                    bool PlacementHasBeenSet() const;

                    /**
                     * 获取The string used to guarantee the idempotency of the request, which is generated by the user and must be unique for different requests. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
                     * @return ClientToken The string used to guarantee the idempotency of the request, which is generated by the user and must be unique for different requests. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
                     * 
                     */
                    std::string GetClientToken() const;

                    /**
                     * 设置The string used to guarantee the idempotency of the request, which is generated by the user and must be unique for different requests. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
                     * @param _clientToken The string used to guarantee the idempotency of the request, which is generated by the user and must be unique for different requests. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
                     * 
                     */
                    void SetClientToken(const std::string& _clientToken);

                    /**
                     * 判断参数 ClientToken 是否已赋值
                     * @return ClientToken 是否已赋值
                     * 
                     */
                    bool ClientTokenHasBeenSet() const;

                private:

                    /**
                     * Compute environment information
                     */
                    NamedComputeEnv m_computeEnv;
                    bool m_computeEnvHasBeenSet;

                    /**
                     * Location information
                     */
                    Placement m_placement;
                    bool m_placementHasBeenSet;

                    /**
                     * The string used to guarantee the idempotency of the request, which is generated by the user and must be unique for different requests. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
                     */
                    std::string m_clientToken;
                    bool m_clientTokenHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_BATCH_V20170312_MODEL_CREATECOMPUTEENVREQUEST_H_
